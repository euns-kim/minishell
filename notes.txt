
envp and assignments
______________________
--> envp[0] is the program name
--> envp[1] is (null);
--> envp[2] is the first element that is displayed with env command;
--> envp[last] is (null);
--> envp[last-1] is path to the program
--> assignments are not added to the envp;
 SO the command env prints everyrhing between two nulls.
--> unset seems to actually remove an element from the envp array. Asking to print the index of unset value returns a new value.
-->export adds a new assignment to the env list

CHAT GPT: The env command shows the environment variables that are inherited from the parent process or those that have been explicitly set using the export command. 
It does not display variables that have been set within the current shell session using direct assignments.
To view all variables, including those set within the current shell session, you can use the set command without any arguments.
This command displays all variables, including environment variables, shell variables, and any variables set within the current shell session using direct assignments.

==> we should make a distinction between environment variables (inherited) and shell variables

--> <echo $notexisting> works as echo without arguments - returns \n


==> <LOGNAME=eei=jaa=noooot=tmarts>, returns eei=jaa=noooot=tmarts so only the first equal sign matters, rest is string
 => if there is a space amywhere after <equals> then return is: bash: anything-after-space-until-the-next-space: command not found
